<%
  config = ActiveRecord::Base.connection.instance_variable_get(:@config)
  case RAILS_ENV
  when 'production'
    index = '/var/lib/sphinx'
    pid = '/var/run/sphinx/myousica.pid'
    log = '/data/myousica/shared/log'
  when 'development'
    index = File.join(RAILS_ROOT, 'index')
    pid = File.join(RAILS_ROOT, 'tmp', 'pids', 'searchd.pid')
    log = File.join(RAILS_ROOT, 'log')
  when 'test'
    index = log = File.join(RAILS_ROOT, 'test', 'index')
    pid = File.join(index, 'searchd.pid')
    FileUtils.mkdir_p index
  end
%>
#
# Myousica Sphinx configuration file (<%= RAILS_ENV %> environment)
#
# Generated by <%= ENV['USER'] %> on <%= Time.now %>
#

#############################################################################
## data source definition (songs)
#############################################################################

source songs
{
  # data source type. mandatory, no default value
  # known types are 'mysql', 'pgsql', 'xmlpipe', 'xmlpipe2'
  type          = mysql

  #####################################################################
  ## SQL settings (for 'mysql' and 'pgsql' types)
  #####################################################################

  # some straightforward parameters for SQL source types
  sql_host        = <%= config[:host] || 'localhost' %>
  sql_user        = <%= config[:username] %>
  sql_pass        = <%= config[:password] %>
  sql_db          = <%= config[:database] %>
  sql_port        = <%= config[:port] || 3306   %>

  # main document fetch query
  # mandatory, integer document ID field MUST be the first selected column
  sql_query        = \
    select songs.id, songs.genre_id as genre_id, songs.bpm as bpm, songs.key, \
      songs.tone as tone, users.country as country, \
      songs.title, songs.original_author as author, songs.description, genres.name as genre \
    from songs \
      left join genres on genres.id = songs.genre_id \
      left join users on songs.user_id = users.id \
    where songs.published = 1;

  sql_attr_uint        = genre_id
  sql_attr_uint        = bpm
  sql_attr_uint        = key
}

#############################################################################
## data source definition (tracks)
#############################################################################

source tracks
{
  # data source type. mandatory, no default value
  # known types are 'mysql', 'pgsql', 'xmlpipe', 'xmlpipe2'
  type          = mysql

  #####################################################################
  ## SQL settings (for 'mysql' and 'pgsql' types)
  #####################################################################

  # some straightforward parameters for SQL source types
  sql_host        = <%= config[:host] || 'localhost' %>
  sql_user        = <%= config[:username] %>
  sql_pass        = <%= config[:password] %>
  sql_db          = <%= config[:database] %>
  sql_port        = <%= config[:port] || 3306   %>

  # main document fetch query
  # mandatory, integer document ID field MUST be the first selected column
  sql_query        = \
    select tracks.id as id, \
      tracks.instrument_id as instrument_id, tracks.bpm as bpm, tracks.key, tracks.idea as idea, \
      tracks.title, tracks.description, tracks.instrument_description, \
      songs.original_author as author, instruments.description as instrument, users.country as country \
    from tracks \
      left join instruments on instruments.id = tracks.instrument_id \
      left join songs on songs.id = tracks.song_id \
      left join users on tracks.user_id = users.id

  sql_attr_uint        = instrument_id
  sql_attr_uint        = bpm
  sql_attr_uint        = key
  sql_attr_bool        = idea
}


#############################################################################
## data source definition (users)
#############################################################################

source users
{
  # data source type. mandatory, no default value
  # known types are 'mysql', 'pgsql', 'xmlpipe', 'xmlpipe2'
  type          = mysql

  #####################################################################
  ## SQL settings (for 'mysql' and 'pgsql' types)
  #####################################################################

  # some straightforward parameters for SQL source types
  sql_host        = <%= config[:host] || 'localhost' %>
  sql_user        = <%= config[:username] %>
  sql_pass        = <%= config[:password] %>
  sql_db          = <%= config[:database] %>
  sql_port        = <%= config[:port] || 3306   %>

  # main document fetch query
  # mandatory, integer document ID field MUST be the first selected column
  sql_query        = \
	  select users.id, users.login, users.nickname, users.motto, users.tastes, users.country \
	  from users \
		where users.activated_at IS NOT NULL
}

#############################################################################
## data source definition (answers)
#############################################################################

source answers
{
  # data source type. mandatory, no default value
  # known types are 'mysql', 'pgsql', 'xmlpipe', 'xmlpipe2'
  type          = mysql

  #####################################################################
  ## SQL settings (for 'mysql' and 'pgsql' types)
  #####################################################################

  # some straightforward parameters for SQL source types
  sql_host        = <%= config[:host] || 'localhost' %>
  sql_user        = <%= config[:username] %>
  sql_pass        = <%= config[:password] %>
  sql_db          = <%= config[:database] %>
  sql_port        = <%= config[:port] || 3306   %>

  # main document fetch query
  # mandatory, integer document ID field MUST be the first selected column
  sql_query        = \
    select answers.id, answers.body from answers
}


#############################################################################
## index definition (songs)
#############################################################################

# this is the songs index, stored locally in the filesystem
#
index songs
{
  # document source(s) to index
  # multi-value, mandatory
  # document IDs must be globally unique across all sources
  source      = songs

  # index files path and file name, without extension
  # mandatory, path must be writable, extensions will be auto-appended
  path      = <%= index %>/songs

  # document attribute values (docinfo) storage mode
  # optional, default is 'extern'
  # known values are 'none', 'extern' and 'inline'
  docinfo      = extern

  # memory locking for cached data (.spa and .spi), to prevent swapping
  # optional, default is 0 (do not mlock)
  # requires searchd to be run from root
  mlock      = 0

  # a list of morphology preprocessors to apply
  # optional, default is empty
  #
  # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
  # 'soundex', and 'metaphone'; additional preprocessors available from
  # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
  # (see libstemmer_c/libstemmer/modules.txt)
  #
  # morphology   = stem_en, stem_ru, soundex
  # morphology  = libstemmer_german
  # morphology  = libstemmer_sv
  morphology    = stem_en #, soundex

  # minimum indexed word length
  # default is 1 (index everything)
  min_word_len    = 1

  # Minimum word prefix length to index.
  # Prefix indexing allows to implement wildcard searching by 'wordstart*' wildcards.
  min_prefix_len  = 3
  prefix_fields   = title, author, description, genre
  enable_star     = 1

  # charset encoding type
  # optional, default is 'sbcs'
  # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
  charset_type    = sbcs

  # whether to strip HTML tags from incoming documents
  # known values are 0 (do not strip) and 1 (do strip)
  # optional, default is 0
  html_strip        = 0
}

#############################################################################
## index definition (tracks)
#############################################################################

# this the tracks index, stored locally in the filesystem
#
index tracks
{
  # document source(s) to index
  # multi-value, mandatory
  # document IDs must be globally unique across all sources
  source      = tracks

  # index files path and file name, without extension
  # mandatory, path must be writable, extensions will be auto-appended
  path      = <%= index %>/tracks

  # document attribute values (docinfo) storage mode
  # optional, default is 'extern'
  # known values are 'none', 'extern' and 'inline'
  docinfo      = extern

  # memory locking for cached data (.spa and .spi), to prevent swapping
  # optional, default is 0 (do not mlock)
  # requires searchd to be run from root
  mlock      = 0

  # a list of morphology preprocessors to apply
  # optional, default is empty
  #
  # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
  # 'soundex', and 'metaphone'; additional preprocessors available from
  # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
  # (see libstemmer_c/libstemmer/modules.txt)
  #
  # morphology   = stem_en, stem_ru, soundex
  # morphology  = libstemmer_german
  # morphology  = libstemmer_sv
  morphology    = stem_en

  # minimum indexed word length
  # default is 1 (index everything)
  min_word_len    = 1

  # Minimum word prefix length to index.
  # Prefix indexing allows to implement wildcard searching by 'wordstart*' wildcards.
  min_prefix_len  = 3
  prefix_fields   = title, description, instrument, author
  enable_star     = 1

  # charset encoding type
  # optional, default is 'sbcs'
  # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
  charset_type    = sbcs

  # whether to strip HTML tags from incoming documents
  # known values are 0 (do not strip) and 1 (do strip)
  # optional, default is 0
  html_strip        = 0
}

#############################################################################
## index definition (users)
#############################################################################

# this is the users index, stored locally in the filesystem
#
index users
{
  # document source(s) to index
  # multi-value, mandatory
  # document IDs must be globally unique across all sources
  source      = users

  # index files path and file name, without extension
  # mandatory, path must be writable, extensions will be auto-appended
  path      = <%= index %>/users

  # document attribute values (docinfo) storage mode
  # optional, default is 'extern'
  # known values are 'none', 'extern' and 'inline'
  docinfo      = extern

  # memory locking for cached data (.spa and .spi), to prevent swapping
  # optional, default is 0 (do not mlock)
  # requires searchd to be run from root
  mlock      = 0

  # a list of morphology preprocessors to apply
  # optional, default is empty
  #
  # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
  # 'soundex', and 'metaphone'; additional preprocessors available from
  # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
  # (see libstemmer_c/libstemmer/modules.txt)
  #
  # morphology   = stem_en, stem_ru, soundex
  # morphology  = libstemmer_german
  # morphology  = libstemmer_sv
  morphology    = soundex

  # minimum indexed word length
  # default is 1 (index everything)
  min_word_len    = 1

  # Minimum word prefix length to index.
  # Prefix indexing allows to implement wildcard searching by 'wordstart*' wildcards.
  min_prefix_len  = 3
  prefix_fields   = login, nickname, motto, tastes
  enable_star     = 1

  # charset encoding type
  # optional, default is 'sbcs'
  # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
  charset_type    = sbcs

  # whether to strip HTML tags from incoming documents
  # known values are 0 (do not strip) and 1 (do strip)
  # optional, default is 0
  html_strip        = 0
}

#############################################################################
## index definition (answers)
#############################################################################

# this is the answers index, stored locally in the filesystem
#
index answers
{
  # document source(s) to index
  # multi-value, mandatory
  # document IDs must be globally unique across all sources
  source      = answers

  # index files path and file name, without extension
  # mandatory, path must be writable, extensions will be auto-appended
  path      = <%= index %>/answers

  # document attribute values (docinfo) storage mode
  # optional, default is 'extern'
  # known values are 'none', 'extern' and 'inline'
  docinfo      = extern

  # memory locking for cached data (.spa and .spi), to prevent swapping
  # optional, default is 0 (do not mlock)
  # requires searchd to be run from root
  mlock      = 0

  # a list of morphology preprocessors to apply
  # optional, default is empty
  #
  # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
  # 'soundex', and 'metaphone'; additional preprocessors available from
  # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
  # (see libstemmer_c/libstemmer/modules.txt)
  #
  # morphology   = stem_en, stem_ru, soundex
  # morphology  = libstemmer_german
  # morphology  = libstemmer_sv
  morphology    = stem_en, soundex

  # minimum indexed word length
  # default is 1 (index everything)
  min_word_len    = 1

  # Minimum word prefix length to index.
  # Prefix indexing allows to implement wildcard searching by 'wordstart*' wildcards.
  min_prefix_len  = 3
  prefix_fields   = body
  enable_star     = 1

  # charset encoding type
  # optional, default is 'sbcs'
  # known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
  charset_type    = sbcs

  # whether to strip HTML tags from incoming documents
  # known values are 0 (do not strip) and 1 (do strip)
  # optional, default is 0
  html_strip        = 0
}


#############################################################################
## indexer settings
#############################################################################

indexer
{
  # memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
  # optional, default is 32M, max is 2047M, recommended is 256M to 1024M
  mem_limit      = 64M

  # maximum IO calls per second (for I/O throttling)
  # optional, default is 0 (unlimited)
  #
  # max_iops      = 40


  # maximum IO call size, bytes (for I/O throttling)
  # optional, default is 0 (unlimited)
  #
  # max_iosize    = 1048576
}

#############################################################################
## searchd settings
#############################################################################

searchd
{
  # IP address to bind on
  # optional, default is 0.0.0.0 (ie. listen on all interfaces)
  #
  # address        = 127.0.0.1
  # address        = 192.168.0.1


  # searchd TCP port number
  # mandatory, default is 3312
  port        = 3312

  # log file, searchd run info is logged here
  # optional, default is 'searchd.log'
  log          = <%= log %>/searchd.log

  # query log file, all search queries are logged here
  # optional, default is empty (do not log queries)
  query_log      = <%= log %>/query.log

  # client read timeout, seconds
  # optional, default is 5
  read_timeout    = 5

  # maximum amount of children to fork (concurrent searches to run)
  # optional, default is 0 (unlimited)
  max_children    = 30

  # PID file, searchd process ID file name
  # mandatory
  pid_file      = <%= pid %>

  # max amount of matches the daemon ever keeps in RAM, per-index
  # WARNING, THERE'S ALSO PER-QUERY LIMIT, SEE SetLimits() API CALL
  # default is 1000 (just like Google)
  max_matches      = 1000

  # seamless rotate, prevents rotate stalls if precaching huge datasets
  # optional, default is 1
  seamless_rotate    = 1

  # whether to forcibly preopen all indexes on startup
  # optional, default is 0 (do not preopen)
  preopen_indexes    = 0

  # whether to unlink .old index copies on succesful rotation.
  # optional, default is 1 (do unlink)
  unlink_old      = 1
}

# --eof--
